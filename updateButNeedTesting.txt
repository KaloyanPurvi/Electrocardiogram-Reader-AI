import os
import biosppy
import heartpy as hp
import neurokit2 as nk
import pandas as pd
import matplotlib.pyplot as plt
import tkinter as tk
from tkinter import filedialog, messagebox

# Load data (simulating sensor input from a file)
def load_ecg_data(file_path):
    """Loads ECG data from a file."""
    if not os.path.exists(file_path):
        raise FileNotFoundError(f"File {file_path} does not exist.")
    data = pd.read_csv(file_path)
    return data

def preprocess_ecg(data, sampling_rate):
    """Preprocess the ECG data using Neurokit."""
    ecg_cleaned = nk.ecg_clean(data, sampling_rate=sampling_rate)
    return ecg_cleaned

def analyze_with_biosppy(ecg_data, sampling_rate):
    """Analyze ECG data using Biosppy."""
    analysis = biosppy.signals.ecg.ecg(signal=ecg_data, sampling_rate=sampling_rate, show=False)
    return analysis

def analyze_with_heartpy(ecg_data, sampling_rate):
    """Analyze ECG data using Heartpy."""
    try:
        wd, measures = hp.process(ecg_data, sample_rate=sampling_rate)
        return wd, measures
    except Exception as e:
        print(f"Heartpy analysis failed: {e}")
        return None, None

def visualize_ecg(data, title):
    """Visualize ECG data."""
    plt.figure(figsize=(10, 4))
    plt.plot(data)
    plt.title(title)
    plt.xlabel("Time (samples)")
    plt.ylabel("Amplitude")
    plt.grid()
    plt.show()

# GUI Functions
def open_file():
    file_path = filedialog.askopenfilename(title="Select ECG Data File", filetypes=[("CSV Files", "*.csv")])
    if file_path:
        try:
            global ecg_data
            ecg_data = load_ecg_data(file_path)
            root.title(f"ECG Data Analysis - {os.path.basename(file_path)}")
            messagebox.showinfo("Success", "File loaded successfully!")
        except Exception as e:
            messagebox.showerror("Error", f"Failed to load file: {e}")

def start_analysis():
    try:
        sampling_rate = 300  # Adjust based on dataset information
        if 'ecg_data' not in globals():
            messagebox.showerror("Error", "No file loaded. Please load an ECG data file first.")
            return

        raw_signal = ecg_data['ecg_signal']  # Replace 'ecg_signal' with the actual column name

        # Preprocessing
        cleaned_signal = preprocess_ecg(raw_signal, sampling_rate)
        visualize_ecg(cleaned_signal, title=os.path.basename(file_path))

        # Analysis
        biosppy_results = analyze_with_biosppy(cleaned_signal, sampling_rate)
        print("Biosppy Analysis Complete.")

        heartpy_results, heartpy_measures = analyze_with_heartpy(cleaned_signal, sampling_rate)
        if heartpy_results and heartpy_measures:
            print("Heartpy Measures:", heartpy_measures)

        # Neurokit analysis
        ecg_analysis = nk.ecg_analyze(cleaned_signal, sampling_rate=sampling_rate)
        print("Neurokit ECG Analysis:", ecg_analysis)

        messagebox.showinfo("Analysis Complete", "ECG analysis completed successfully. Check the console for details.")

    except Exception as e:
        messagebox.showerror("Error", f"Analysis failed: {e}")

# Create GUI
root = tk.Tk()
root.title("ECG Data Analysis")

# Disable maximize button
root.resizable(False, False)

# Create buttons
btn_load = tk.Button(root, text="Load ECG Data", command=open_file, width=20)
btn_load.pack(pady=10)

btn_analyze = tk.Button(root, text="Start Analysis", command=start_analysis, width=20)
btn_analyze.pack(pady=10)

# Run the GUI
root.mainloop()
